{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20720\viewh9640\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 \ul \ulc0 Mutable String Manipulation\
\
\ulnone I have conducted a small experiment, where I have appended, removed and changed char's to uppercase.\
The manipulation of a mutable string pretty increases in a linearly\
We can see that from the following logging of the time consumption:\
\
\pard\tx529\pardeftab529\pardirnatural

\f1\b\fs22 \cf0 \CocoaLigature0 Beginning to append char's to string\
Finished appending char's to string time passed: 22.367001\
Finished converting to uppercase time passed: 0.280023, Now we will remove the char's\
Finished removing the chars time passed: 9.485006, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 40.974021\
Finished converting to uppercase time passed: 0.524044, Now we will remove the char's\
Finished removing the chars time passed: 19.258022, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 99.645972\
Finished converting to uppercase time passed: 1.047015, Now we will remove the char's\
Finished removing the chars time passed: 35.956025, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 143.372953\
Finished converting to uppercase time passed: 2.218008, Now we will remove the char's\
Finished removing the chars time passed: 67.197025, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 296.555996\
Finished converting to uppercase time passed: 4.574001, Now we will remove the char's\
Finished removing the chars time passed: 137.350023, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 566.358030\
Finished converting to uppercase time passed: 9.302974, Now we will remove the char's\
Finished removing the chars time passed: 445.576012, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 1280.788004\
Finished converting to uppercase time passed: 23.907006, Now we will remove the char's\
Finished removing the chars time passed: 586.878955, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 2412.687004\
Finished converting to uppercase time passed: 42.407990, Now we will remove the char's\
Finished removing the chars time passed: 1159.253001, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 4538.850963\
Finished converting to uppercase time passed: 81.541955, Now we will remove the char's\
Finished removing the chars time passed: 2323.750973, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 9109.197021\
Finished converting to uppercase time passed: 179.233015, Now we will remove the char's\
Finished removing the chars time passed: 5424.903989, now we will double the iterations\
Beginning to append char's to string\
Finished appending char's to string time passed: 18334.917009\
Finished converting to uppercase time passed: 373.242021, Now we will remove the char's\
Finished removing the chars time passed: 8832.252979, now we will double the iterations\
\

\f0\b0 We can see that the time consumption will approximately double every time we double the amount of char's we append, remove and change in the String,\
From this we can conclude that manipulation with at mutable string performance can be described with the following O-notation, O(n).\
\
}